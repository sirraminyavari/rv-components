@import '../../scss/modules/default';

.baseAvatar {
  border: none;
  border-radius: $borderRadiusHalf;
  border-width: px-to-rem(3);
  border-style: solid;
  border-color: transparent;
  transition: all 0.24s ease-out;
  display: inline;
  aspect-ratio: 1;
  box-sizing: border-box;

  &.large {
    width: px-to-rem(68);
  }

  &.medium {
    width: px-to-rem(56);
  }

  &.small {
    width: px-to-rem(40);
  }

  &.fullCircle {
    border-radius: 100%;
  }

  &.roundedFull {
    border-radius: $borderRadiusFull;
  }

  &.roundedHalf {
    border-radius: $borderRadiusHalf;
  }

  &.stacked {
    &:first-of-type:not(:last-of-type) {
      margin-inline-start: px-to-rem(14);

      &.large {
        margin-inline-start: px-to-rem(14);
      }

      &.medium {
        margin-inline-start: px-to-rem(8);
      }

      &.small {
        margin-inline-start: px-to-rem(4);
      }
    }

    /* stylelint-disable-next-line no-descending-specificity */
    &:not(:last-of-type) {
      /* stylelint-disable-next-line no-descending-specificity */
      &.large {
        margin-inline-end: px-to-rem(-34);

        &:hover {
          transform: translateX(px-to-rem(-16));
        }
      }

      /* stylelint-disable-next-line no-descending-specificity */
      &.medium {
        margin-inline-end: px-to-rem(-28);

        &:hover,
        &[data-sudo='hover'] {
          transform: translateX(px-to-rem(-14));
        }
      }

      /* stylelint-disable-next-line no-descending-specificity */
      &.small {
        margin-inline-end: px-to-rem(-20);

        &:hover,
        &[data-sudo='hover'] {
          transform: translateX(px-to-rem(-12));
        }
      }
    }
  }
}

.primary {
  background-color: hsl(var(--base));

  &:hover,
  &[data-sudo='hover'] {
    background-color: hsl(var(--light));
  }

  &:active,
  &[data-sudo='active'] {
    background-color: hsl(var(--light));
  }
}

.outline {
  border-color: hsl(var(--base));
  background-color: transparent;
  padding: px-to-rem(2);

  &:hover,
  &[data-sudo='hover'] {
    background-color: hsl(var(--base) / 15%);
  }

  &:active,
  &[data-sudo='active'] {
    background-color: hsl(var(--base) / 25%);
  }
}

.white {
  background-color: hsl(var(--white));

  &:hover,
  &[data-sudo='hover'] {
    background-color: hsl(var(--base) / 100%);
  }
}

.disabled {
  background-color: hsl(var(--base));
  filter: contrast(0.5);
}

@include on-rtl {
  .baseAvatar {
    &.stacked {
      &:not(:last-of-type) {
        &.large {
          &:hover,
          &[data-sudo='hover'] {
            transform: translateX(px-to-rem(16));
          }
        }

        &.medium {
          &:hover,
          &[data-sudo='hover'] {
            transform: translateX(px-to-rem(14));
          }
        }

        &.small {
          &:hover,
          &[data-sudo='hover'] {
            transform: translateX(px-to-rem(12));
          }
        }
      }
    }
  }
}
